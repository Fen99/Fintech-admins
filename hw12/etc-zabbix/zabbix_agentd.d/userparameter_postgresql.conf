#PostgreSQL
#
# Calculate query execution time (in milliseconds) for selected database and port.
#
# Variables:
#   $1 = user name. Required!!!
#   $2 = port number. Default: 5432
#   $3 = password
#
# Examples:
#   pgsql.ping[port,user,password]
UserParameter=pgsql.ping[*],start_time=$(date +%s%N); PGPASSWORD="$3" psql -U "$2" -p "$1" -c 'SELECT 1' 2>&1 1>/dev/null; echo $(( ($(date +%s%N) - $start_time ) / 1000000 ))

#
# Get PostgreSQL Server version
#
# Examples:
#   pgsql.version[port,user,password]
UserParameter=pgsql.version[*],PGPASSWORD="$3" psql -U "$2" -p "$1"  -c 'SHOW server_version' | tr -d '[:space:]'

# Database discovery rule
# Standart params [port,user,password]
UserParameter=pgsql.database.discovery[*],echo -n '{"data":[ '; for db in $(PGPASSWORD="$3" psql -U "$2" -p "$1" -c "SELECT string_agg(datname,' ') from pg_catalog.pg_database where datistemplate = 'false'" | grep -Ev -e 'string_agg' -e '^\-+$' -e 'row.*\)'); do echo -n '{"{#DATABASE}":"'$db'"}, '; done; echo '{} ]}';
#
# Database items prototype
# [port, user, password, database]
UserParameter=pgsql.database.size[*],PGPASSWORD="$3" psql -U "$2" -p "$1"  -c "SELECT pg_database_size(datname) FROM pg_catalog.pg_database WHERE datistemplate = 'false' AND datname = '$4'" | grep -o -E '[0-9]+$'

